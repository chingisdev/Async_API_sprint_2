version: "3.7"
name: async-api

services:
  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
      - "85:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - movies-api

  etl-service:
    build: postgres_to_elastic
    restart: unless-stopped
    depends_on:
      - postgres
      - elasticsearch
      - redis
    env_file:
      - .env.example

  movies-api:
    build: movies_api
    restart: unless-stopped
    depends_on:
      - elasticsearch
      - redis
    expose:
      - "8000"
    env_file:
      - .env.example

  postgres:
    image: postgres:13
    volumes:
      - ./init_postgres.sh:/docker-custom-entrypoint/init.sh
      - ./test_volumes/postgres:/var/lib/postgresql/data
      - ./schema_design/scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env.example
    command: ["/docker-custom-entrypoint/init.sh"]
    expose:
      - "5432"
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      retries: 30
      start_period: 20s
      timeout: 10s

  redis:
    image: redis:latest
    expose:
      - "6379"
    ports:
      - "6380:6379"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0
      - xpack.security.enabled=false
    volumes:
      - movies_esdata_test:/usr/share/elasticsearch/data
    expose:
      - "9200"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      retries: 5

volumes:
  movies_esdata_test: